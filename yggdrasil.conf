{
  # Your private key. DO NOT share this with anyone!
  PrivateKey: 35cfd446aad500ac5abc1110e31d642fd2ed2a6604e01134443e8542f9b7c09df40d2cdd20a882faec905b9abe052e171fc9e99ba4e43ca031a2fce5f3300006

  # List of connection strings for outbound peer connections in URI format,
  # e.g. tls://a.b.c.d:e or socks://a.b.c.d:e/f.g.h.i:j. These connections
  # will obey the operating system routing table, therefore you should
  # use this section when you may connect via different interfaces.
  Peers: [
    # Japan
    tls://[2406:8c00:0:3408:133:18:201:69]:54232
    tls://www21123ui.sakura.ne.jp:54232
    # Singapore
    tls://sin.yuetau.net:6643
    # Philippines
    tcp://mima.localghost.org:1996
    # Canada
    tls://192.99.145.61:58226
    tls://[2607:5300:201:3100::50a1]:58226
    tls://ca1.servers.devices.cwinfo.net:58226
    # United States 
    tcp://rendezvous.anton.molyboha.me:25453
    tcp://cowboy.supergay.network:9111
    tls://ygg.jjolly.dev:3443
    tls://ygg3.mk16.de:1338?key=000003acdaf2a60e8de2f63c3e63b7e911d02380934f09ee5c83acb758f470c1
    tls://ygg4.mk16.de:1338?key=0000147df8daa1cce2ad4b1d4b14c60a4c69a991b2dfde4e00ba7e95c36c530b
    tls://44.234.134.124:443
    tls://longseason.1200bps.xyz:13122
    tls://supergay.network:443
    tls://ygg.mnpnk.com:443
    quic://yggdrasil-2.herronjo.com:1337?key=6cbcd23d94c9a300e442bd1054c7ced8d09dbb6349261651b24e76851efb7edf
    quic://[2602:fc24:18:7a42::1]:993
    # France
    tls://cloudberry.fr1.servers.devices.cwinfo.net:54232
    tls://fr2.servers.devices.cwinfo.net:23108
    tcp://51.15.204.214:12345
    tls://s2.i2pd.xyz:39575
    quic://boy.iwnp.org:65535
    # Russia
    tls://yggno.de:18227
    tls://s-mow-0.sergeysedoy97.ru:65534 
    tls://s-mow-1.sergeysedoy97.ru:65534
    tls://45.147.200.202:443
  ]

  # List of connection strings for outbound peer connections in URI format,
  # arranged by source interface, e.g. { "eth0": [ "tls://a.b.c.d:e" ] }.
  # Note that SOCKS peerings will NOT be affected by this option and should
  # go in the "Peers" section instead.
  InterfacePeers: {}

  # Listen addresses for incoming connections. You will need to add
  # listeners in order to accept incoming peerings from non-local nodes.
  # Multicast peer discovery will work regardless of any listeners set
  # here. Each listener should be specified in URI format as above, e.g.
  # tls://0.0.0.0:0 or tls://[::]:0 to listen on all interfaces.
  Listen: []

  # Configuration for which interfaces multicast peer discovery should be
  # enabled on. Each entry in the list should be a json object which may
  # contain Regex, Beacon, Listen, and Port. Regex is a regular expression
  # which is matched against an interface name, and interfaces use the
  # first configuration that they match gainst. Beacon configures whether
  # or not the node should send link-local multicast beacons to advertise
  # their presence, while listening for incoming connections on Port.
  # Listen controls whether or not the node listens for multicast beacons
  # and opens outgoing connections.
  MulticastInterfaces: [
    {
      Regex: .*
      Beacon: true
      Listen: true
      Port: 0
      Priority: 0
      Password: ""
    }
  ]

  # List of peer public keys to allow incoming peering connections
  # from. If left empty/undefined then all connections will be allowed
  # by default. This does not affect outgoing peerings, nor does it
  # affect link-local peers discovered via multicast.
  AllowedPublicKeys: []

  # Local network interface name for TUN adapter, or "auto" to select
  # an interface automatically, or "none" to run without TUN.
  IfName: auto

  # Maximum Transmission Unit (MTU) size for your local TUN interface.
  # Default is the largest supported size for your platform. The lowest
  # possible value is 1280.
  IfMTU: 65535

  # By default, nodeinfo contains some defaults including the platform,
  # architecture and Yggdrasil version. These can help when surveying
  # the network and diagnosing network routing problems. Enabling
  # nodeinfo privacy prevents this, so that only items specified in
  # "NodeInfo" are sent back if specified.
  NodeInfoPrivacy: false

  # Optional node info. This must be a { "key": "value", ... } map
  # or set as null. This is entirely optional but, if set, is visible
  # to the whole network on request.
  NodeInfo: {}
}
